eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgdGVzdDogCiAgICBpbWFnZTogdmllc3RpbnRhL25vZGU6dmllc3RpbnRhLXRlc3QKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbcHVzaCxwdWxsX3JlcXVlc3RdCiAgICAgIGJyYW5jaGVzOiBbbWFzdGVyLCByZWFjdC1zdGFydF0KICAgIGVudmlyb25tZW50OgogICAgICBEQVRBQkFTRV9VUkw6IHBvc3RncmVzOi8vcG9zdGdyZXM6dmllc3RpbnRhY2VudG9zQDEyNy4wLjAuMTo1NDMyCiAgICAgIE5PREVfRU5WOiB0ZXN0CiAgICAgIENPVkVSQUxMU19SRVBPX1RPS0VOOiAkJENPVkVSQUxMU19UT0tFTgogICAgICBDT1ZFUkFMTFNfVE9LRU46ICQkQ09WRVJBTExTX1RPS0VOCiAgICAgIENPREVDT1ZfVE9LRU46ICQkQ09ERUNPVl9UT0tFTgoKICAgIGNvbW1hbmRzOgogICAgICAtIG5wbSBpbnN0YWxsIC0tc2lsZW50CiAgICAgIC0gbnBtIGluc3RhbGwgc3RhbmRhcmQgLWcKICAgICAgLSBucG0gaW5zdGFsbCBjb2RlY292IC1nCiAgICAgIC0gbnBtIHJ1biB0ZXN0CiAgICAgIC0gY2F0IC4vY292ZXJhZ2UvbGNvdi5pbmZvIHwgY29kZWNvdgogICAgICAtIG5wbSBydW4gdGVzdC1jbGllbnQKICAgIHZvbHVtZXM6CiAgICAgIC0gIi9yb290L3ZpZXN0aW50YV9jYWNoZS9ub2RlX21vZHVsZXM6L25vZGVfbW9kdWxlcyIKCiAgZGVwbG95OgogICAgaW1hZ2U6IHBsdWdpbnMvc3NoCiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IHByb2R1Y3Rpb24KICAgIGhvc3Q6IHN0b2trZXJzLm5vCiAgICBwb3J0OiAyMjAxNAogICAgY29tbWFuZHM6CiAgICAgIC0gYmFzaCAvc2NyaXB0cy9kZXBsb3ktdmllc3RpbnRhLXByb2Quc2gKCnNlcnZpY2VzOgogICAgcG9zdGdyZXM6CiAgICAgIGltYWdlOiBwb3N0Z3Jlczo5LjYKICAgICAgY29udGFpbmVyX25hbWU6IHZpZXN0aW50YV9wb3N0Z3JlcwogICAgICBwb3J0czoKICAgICAgICAtICI1NDMyOjU0MzIiCiAgICAgIGVudmlyb25tZW50OgogICAgICAgIFBPU1RHUkVTX1VTRVI6IHBvc3RncmVzCiAgICAgICAgUE9TVEdSRVNfUEFTU1dPUkQ6IHZpZXN0aW50YWNlbnRvcwogICAgICAgIFBPU1RHUkVTX0RCOiB2aWVzdGludGFkYl9kZXYKCmNhY2hlOgogIG1vdW50OgogICAgLSBub2RlX21vZHVsZXMKCgoK.VYCL8tjV2GzExp-Zr7MP3stBxQJBIoLGcQamG3cVQHM